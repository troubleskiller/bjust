"""update tables

Revision ID: 4c11391f5829
Revises: 47bad052a525
Create Date: 2025-05-21 22:23:16.049749

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4c11391f5829'
down_revision = '47bad052a525'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('application_scenario_options',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('best_practice_cases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('case_dir_name', sa.String(length=255), nullable=False),
    sa.Column('case_img_path', sa.String(length=512), nullable=False),
    sa.Column('case_type', sa.String(length=50), nullable=False),
    sa.Column('case_title', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.Text(), nullable=True),
    sa.Column('model_type_name', sa.Text(), nullable=True),
    sa.Column('create_date_str', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('case_dir_name')
    )
    op.create_table('channel_datasets',
    sa.Column('dataset_uuid', sa.String(length=36), nullable=False),
    sa.Column('dataset_name', sa.String(length=255), nullable=False),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('location_description', sa.Text(), nullable=True),
    sa.Column('center_frequency_mhz', sa.Float(), nullable=True),
    sa.Column('bandwidth_mhz', sa.Float(), nullable=True),
    sa.Column('data_volume_groups', sa.Integer(), nullable=True),
    sa.Column('applicable_task_type', sa.String(length=100), nullable=True),
    sa.Column('file_name_original', sa.String(length=255), nullable=True),
    sa.Column('dataset_file_storage_path', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('dataset_uuid')
    )
    op.create_table('frequency_band_options',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('model_type_options',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('models',
    sa.Column('model_uuid', sa.String(length=36), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.String(length=50), nullable=False),
    sa.Column('frequency_bands', sa.JSON(), nullable=True),
    sa.Column('application_scenarios', sa.JSON(), nullable=True),
    sa.Column('model_description', sa.Text(), nullable=True),
    sa.Column('model_doc_storage_path', sa.String(length=512), nullable=True),
    sa.Column('tiff_image_storage_path', sa.String(length=512), nullable=True),
    sa.Column('model_zip_storage_path', sa.String(length=512), nullable=True),
    sa.Column('dataset_for_validation_zip_storage_path', sa.String(length=512), nullable=True),
    sa.Column('can_be_used_for_validation', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('model_uuid')
    )
    op.create_table('validation_task_type_options',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_type_id_str', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_type_id_str')
    )
    op.create_table('model_validation_tasks',
    sa.Column('validation_task_uuid', sa.String(length=36), nullable=False),
    sa.Column('validation_task_name', sa.String(length=255), nullable=True),
    sa.Column('task_type_id_str', sa.String(length=50), nullable=False),
    sa.Column('dataset_uuid', sa.String(length=36), nullable=False),
    sa.Column('param_config', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('actual_data_storage_path', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_uuid'], ['channel_datasets.dataset_uuid'], ),
    sa.ForeignKeyConstraint(['task_type_id_str'], ['validation_task_type_options.task_type_id_str'], ),
    sa.PrimaryKeyConstraint('validation_task_uuid')
    )
    op.create_table('single_point_prediction_tasks',
    sa.Column('task_uuid', sa.String(length=36), nullable=False),
    sa.Column('model_uuid', sa.String(length=36), nullable=False),
    sa.Column('prediction_mode', sa.String(length=20), nullable=False),
    sa.Column('point_config', sa.JSON(), nullable=False),
    sa.Column('param_config', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('completed_points', sa.Integer(), nullable=True),
    sa.Column('total_samples', sa.Integer(), nullable=True),
    sa.Column('completed_samples', sa.Integer(), nullable=True),
    sa.Column('overall_rmse_db', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_uuid'], ['models.model_uuid'], ),
    sa.PrimaryKeyConstraint('task_uuid')
    )
    op.create_table('situation_prediction_tasks',
    sa.Column('task_uuid', sa.String(length=36), nullable=False),
    sa.Column('model_uuid', sa.String(length=36), nullable=False),
    sa.Column('point_config', sa.JSON(), nullable=False),
    sa.Column('param_config', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('result_heatmap_data_type', sa.String(length=50), nullable=True),
    sa.Column('result_grid_origin', sa.JSON(), nullable=True),
    sa.Column('result_cell_size_deg', sa.JSON(), nullable=True),
    sa.Column('result_rows', sa.Integer(), nullable=True),
    sa.Column('result_cols', sa.Integer(), nullable=True),
    sa.Column('result_values_storage_path', sa.String(length=512), nullable=True),
    sa.Column('result_value_unit', sa.String(length=20), nullable=True),
    sa.Column('result_url', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_uuid'], ['models.model_uuid'], ),
    sa.PrimaryKeyConstraint('task_uuid')
    )
    op.create_table('small_scale_prediction_tasks',
    sa.Column('task_uuid', sa.String(length=36), nullable=False),
    sa.Column('model_uuid', sa.String(length=36), nullable=False),
    sa.Column('point_config', sa.JSON(), nullable=False),
    sa.Column('param_config', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('result_pdp_data_storage_path', sa.String(length=512), nullable=True),
    sa.Column('result_ber_snr_data_storage_path', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_uuid'], ['models.model_uuid'], ),
    sa.PrimaryKeyConstraint('task_uuid')
    )
    op.create_table('model_validation_task_model_associations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('validation_task_uuid', sa.String(length=36), nullable=False),
    sa.Column('model_uuid', sa.String(length=36), nullable=False),
    sa.Column('status_for_model', sa.String(length=50), nullable=True),
    sa.Column('error_message_for_model', sa.Text(), nullable=True),
    sa.Column('model_specific_result_storage_path', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['model_uuid'], ['models.model_uuid'], ),
    sa.ForeignKeyConstraint(['validation_task_uuid'], ['model_validation_tasks.validation_task_uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('single_point_prediction_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_uuid', sa.String(length=36), nullable=False),
    sa.Column('rx_index', sa.Integer(), nullable=True),
    sa.Column('sample_index', sa.Integer(), nullable=True),
    sa.Column('pos', sa.JSON(), nullable=False),
    sa.Column('path_loss_db', sa.Float(), nullable=False),
    sa.Column('distance_from_start_m', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_uuid'], ['single_point_prediction_tasks.task_uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('single_point_prediction_results')
    op.drop_table('model_validation_task_model_associations')
    op.drop_table('small_scale_prediction_tasks')
    op.drop_table('situation_prediction_tasks')
    op.drop_table('single_point_prediction_tasks')
    op.drop_table('model_validation_tasks')
    op.drop_table('validation_task_type_options')
    op.drop_table('models')
    op.drop_table('model_type_options')
    op.drop_table('frequency_band_options')
    op.drop_table('channel_datasets')
    op.drop_table('best_practice_cases')
    op.drop_table('application_scenario_options')
    # ### end Alembic commands ###
